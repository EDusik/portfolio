{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\eduar\\\\Documents\\\\Projetos\\\\portfolio\\\\nextjs\\\\context\\\\reducer\\\\Reducer.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { createContext, useReducer } from \"react\";\nconst initialContext = {\n  search: \"\",\n  isLoading: true,\n  error: false\n};\nconst Context = /*#__PURE__*/createContext({});\n\nconst reducer = (state = initialContext, action) => {\n  const newState = _objectSpread({}, state);\n\n  newState[action.name] = action.value;\n  return newState;\n};\n\nconst ContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const {\n    0: context = initialContext,\n    1: dispatch\n  } = useReducer(reducer);\n  const value = {\n    context,\n    dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContextProvider, \"uzMBjfHAc2f+QDadDAzU7bYymnk=\");\n\n_c = ContextProvider;\nconst ContextConsumer = Context.Consumer;\nexport { Context, ContextProvider, ContextConsumer };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["C:/Users/eduar/Documents/Projetos/portfolio/nextjs/context/reducer/Reducer.js"],"names":["React","createContext","useReducer","initialContext","search","isLoading","error","Context","reducer","state","action","newState","name","value","ContextProvider","children","context","dispatch","ContextConsumer","Consumer"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AAEA,MAAMC,cAAc,GAAG;AACtBC,EAAAA,MAAM,EAAE,EADc;AAEtBC,EAAAA,SAAS,EAAE,IAFW;AAGtBC,EAAAA,KAAK,EAAE;AAHe,CAAvB;AAMA,MAAMC,OAAO,gBAAGN,aAAa,CAAC,EAAD,CAA7B;;AAEA,MAAMO,OAAO,GAAG,CAACC,KAAK,GAAGN,cAAT,EAAyBO,MAAzB,KAAoC;AACnD,QAAMC,QAAQ,qBAAQF,KAAR,CAAd;;AACAE,EAAAA,QAAQ,CAACD,MAAM,CAACE,IAAR,CAAR,GAAwBF,MAAM,CAACG,KAA/B;AACA,SAAOF,QAAP;AACA,CAJD;;AAMA,MAAMG,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACzC,QAAM;AAAA,OAACC,OAAO,GAAGb,cAAX;AAAA,OAA2Bc;AAA3B,MAAuCf,UAAU,CAACM,OAAD,CAAvD;AACA,QAAMK,KAAK,GAAG;AAAEG,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAd;AACA,sBAAO,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEJ,KAAzB;AAAA,cAAiCE;AAAjC;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAJD;;GAAMD,e;;KAAAA,e;AAMN,MAAMI,eAAe,GAAGX,OAAO,CAACY,QAAhC;AACA,SAASZ,OAAT,EAAkBO,eAAlB,EAAmCI,eAAnC","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\n\r\nconst initialContext = {\r\n\tsearch: \"\",\r\n\tisLoading: true,\r\n\terror: false\r\n};\r\n\r\nconst Context = createContext({});\r\n\r\nconst reducer = (state = initialContext, action) => {\r\n\tconst newState = { ...state };\r\n\tnewState[action.name] = action.value;\r\n\treturn newState;\r\n};\r\n\r\nconst ContextProvider = ({ children }) => {\r\n\tconst [context = initialContext, dispatch] = useReducer(reducer);\r\n\tconst value = { context, dispatch };\r\n\treturn <Context.Provider value={value}>{children}</Context.Provider>;\r\n};\r\n\r\nconst ContextConsumer = Context.Consumer;\r\nexport { Context, ContextProvider, ContextConsumer };\r\n"]},"metadata":{},"sourceType":"module"}